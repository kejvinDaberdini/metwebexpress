BEGIN TRANSACTION;
DROP TABLE IF EXISTS `user`;
CREATE TABLE IF NOT EXISTS `user` (
	`userID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`username`	TEXT NOT NULL UNIQUE,
	`email`	TEXT NOT NULL UNIQUE,
	`password`	TEXT NOT NULL,
	`creator`	INTEGER CHECK("creator" = 0 OR "creator" = 1)
);
DROP TABLE IF EXISTS `category`;
CREATE TABLE IF NOT EXISTS `category` (
	`name`	TEXT NOT NULL,
	`description`	TEXT NOT NULL,
	PRIMARY KEY(`name`)
);
DROP TABLE IF EXISTS `podcast`;
CREATE TABLE IF NOT EXISTS `podcast` (
	`podcastID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`title`	TEXT NOT NULL,
	`creator`	TEXT NOT NULL,
	`description`	TEXT NOT NULL,
	`category`	TEXT NOT NULL,
	`image`	TEXT NOT NULL,
	`creatorID`	INTEGER NOT NULL,
	FOREIGN KEY(`category`) REFERENCES `category`(`name`) ON UPDATE CASCADE,
	FOREIGN KEY(`creatorID`) REFERENCES `user`(`userID`) ON DELETE CASCADE
);
DROP TABLE IF EXISTS `episode`;
CREATE TABLE IF NOT EXISTS `episode` (
	`episodeID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`title`	TEXT NOT NULL,
	`file`	TEXT NOT NULL,
	`uploadDate`	DATE NOT NULL,
	`price`	REAL,
	`podcastID`	INTEGER NOT NULL,
	`description`	TEXT NOT NULL,
	`sponsor`	TEXT,
	FOREIGN KEY(`podcastID`) REFERENCES `podcast`(`podcastID`) ON DELETE CASCADE
);
DROP TABLE IF EXISTS `purchase`;
CREATE TABLE IF NOT EXISTS `purchase` (
	`purchaseID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`name`	TEXT NOT NULL,
	`surname`	TEXT NOT NULL,
	`cardType`	TEXT NOT NULL,
	`cardNumber`	INTEGER NOT NULL,
	`cvv`	INTEGER NOT NULL,
	`userID`	INTEGER NOT NULL,
	`episodeID`	INTEGER NOT NULL,
	FOREIGN KEY(`episodeID`) REFERENCES `episode`(`episodeID`) ON DELETE CASCADE,
	CONSTRAINT `UserEpisode` UNIQUE(`userID`,`episodeID`),
	FOREIGN KEY(`userID`) REFERENCES `user`(`userID`) ON DELETE CASCADE
);

DROP TABLE IF EXISTS `follow`;
CREATE TABLE IF NOT EXISTS `follow` (
	`followID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`userID`	INTEGER NOT NULL,
	`podcastID`	INTEGER NOT NULL,
	FOREIGN KEY(`podcastID`) REFERENCES `podcast`(`podcastID`) ON DELETE CASCADE,
	CONSTRAINT `UserPodcast` UNIQUE(`userID`,`podcastID`),
	FOREIGN KEY(`userID`) REFERENCES `user`(`userID`) ON DELETE CASCADE
);
DROP TABLE IF EXISTS `favorite`;
CREATE TABLE IF NOT EXISTS `favorite` (
	`favoriteID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`userID`	INTEGER NOT NULL,
	`episodeID`	INTEGER NOT NULL,
	FOREIGN KEY(`userID`) REFERENCES `user`(`userID`) ON DELETE CASCADE,
	FOREIGN KEY(`episodeID`) REFERENCES `episode`(`episodeID`) ON DELETE CASCADE,
	CONSTRAINT `UserFavoriteEpisode` UNIQUE(`userID`,`episodeID`)
);

DROP TABLE IF EXISTS `comment`;
CREATE TABLE IF NOT EXISTS `comment` (
	`commentID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`commentText`	TEXT NOT NULL,
	`uploadDate`	DATE NOT NULL,
	`userID`	INTEGER NOT NULL,
	`episodeID`	INTEGER NOT NULL,
	FOREIGN KEY(`userID`) REFERENCES `user`(`userID`) ON DELETE CASCADE,
	FOREIGN KEY(`episodeID`) REFERENCES `episode`(`episodeID`) ON DELETE CASCADE
);

COMMIT;
